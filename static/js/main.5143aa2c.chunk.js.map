{"version":3,"sources":["components/Subtitle.js","components/Header.js","components/Encrypt.js","App.js","reportWebVitals.js","index.js"],"names":["Header","_ref","title","react_default","a","createElement","_ref2","subtitle","Subtitle","defaultProps","CaesarShift","str","num","res","charcode","i","length","match","charCodeAt","String","fromCharCode","Encrypt","onInput","_useState","useState","_useState2","Object","slicedToArray","red_text","setRedText","_useState3","_useState4","shift","setShift","_useState5","_useState6","black_text","setBlackText","className","onSubmit","e","preventDefault","alert","isNaN","Number","type","placeholder","value","onChange","target","doCaesarShift","console","log","App","components_Header","components_Encrypt","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5143aa2c.chunk.js","sourcesContent":["import React, { Component }  from 'react';\r\n\r\nconst Header = ( { title } ) => {\r\n  return (\r\n    <header>\r\n        <h3>{title}</h3>\r\n    </header>\r\n  )\r\n}\r\nexport default Header","import PropTypes from 'prop-types'\r\nimport Subtitle from './Subtitle'\r\nimport React from 'react'\r\n\r\nconst Header = ( { title } , { subtitle }) => {\r\n  return (\r\n    <header>\r\n        <h1>{title}</h1>\r\n        <Subtitle title=\"By Quan\"/>\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Caesar Shift Calculator'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nexport default Header","import React, { useState } from 'react'\r\n\r\nfunction CaesarShift(str, num) {\r\n    var res = '';\r\n    var charcode = 0;\r\n    \r\n    for (var i = 0; i < str.length; i++) {\r\n        if (!str[i].match(/^[a-z0-9]+$/i)) {\r\n            res += str[i];\r\n            continue;\r\n        }\r\n        \r\n        charcode = (str[i].charCodeAt()) + num;\r\n        if (str[i].charCodeAt() < 91 && charcode > 90) {\r\n            charcode -= 26;\r\n        }\r\n        if (str[i].charCodeAt() < 123 && charcode > 122) {\r\n            charcode -= 26;\r\n        }\r\n        res += String.fromCharCode(charcode);\r\n    }\r\n    \r\n    return res;\r\n}\r\n\r\nconst Encrypt = ( {onInput} ) => {\r\n    const [red_text, setRedText] = useState('')\r\n    const [shift, setShift] = useState('')\r\n    const [black_text, setBlackText] = useState('')\r\n\r\n    const onShift = (e) => {\r\n        e.preventDefault()\r\n    \r\n        if(!red_text && !black_text) {\r\n            alert('Please add red text or black text')\r\n            return\r\n        }\r\n        if(!shift) {\r\n            alert('Please select a number to shift by')\r\n        }\r\n        if (isNaN(shift)) \r\n        {\r\n            alert(\"shift must be a number\");\r\n            return false;\r\n        }\r\n        if(red_text) {\r\n            setBlackText(CaesarShift(red_text, Number(shift)))\r\n            setRedText('')\r\n        } else if(black_text) {\r\n            setRedText(CaesarShift(black_text, -1*Number(shift)))\r\n            setBlackText('')\r\n        }\r\n        \r\n        onInput({red_text, shift, black_text})\r\n    }\r\n\r\n    return (\r\n        <form className='encrypter-form' onSubmit={onShift}>\r\n            <div className='form-control'>\r\n                <label>Red Text (Text to shift)</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Enter text to shift' \r\n                    value={red_text}\r\n                    onChange={(e) => setRedText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Number to shift by</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Enter number to shift by' \r\n                    value={shift}\r\n                    onChange={(e) => setShift(e.target.value)} \r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Black Text (Shifted Text)</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Output will appear here' \r\n                    value={black_text}\r\n                    onChange={(e) => setBlackText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <input type='submit' value='Shift' className='btn btn-block'/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default Encrypt","import React, { useState } from 'react'\nimport Header from './components/Header'\nimport Encrypt from './components/Encrypt'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n        <Header subtitle = {\"Quan\"}/>\n        <Encrypt onInput={doCaesarShift}/>\n    </div>\n  );\n}\n\n// Shift red text\nconst doCaesarShift = (red_text, shift) => {\n  console.log(red_text);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}